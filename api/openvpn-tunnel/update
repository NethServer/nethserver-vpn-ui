#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;

require '/usr/libexec/nethserver/api/nethserver-vpn/lib/vpn_functions.pl';

my $input = readInput();
my $cmd = $input->{'action'};

my $db = esmith::ConfigDB->open('vpn');
if ($cmd eq 'update-client') {

    foreach (qw(LocalPeer Topology Digest Compression Cipher Mode RemotePort AuthMode RemotePeer Protocol Password User)) {
        $db->set_prop($input->{'name'}, $_, $input->{$_}) if (exists($input->{$_}))
    }

    foreach (qw(RemoteHost RemoteNetworks WanPriorities)) {
        $db->set_prop($input->{'name'}, $_, join(',',@{$input->{$_}})) if (exists($input->{$_}));
    }

    if ($input->{'Psk'}) {
        write_file("/var/lib/nethserver/certs/clients/".$input->{'name'}.".key", $input->{'Psk'});
    }

    if ($input->{'Crt'}) {
        write_file("/var/lib/nethserver/certs/clients/".$input->{'name'}.".pem", $input->{'Crt'});
    }

} elsif ($cmd eq 'update-server') {

    foreach (qw(PublicAddresses RemoteNetworks LocalNetworks)) {
        $db->set_prop($input->{'name'}, $_, join(',',@{$input->{$_}})) if (exists($input->{$_}));
    }

    foreach (qw(Topology Digest Compression Cipher TlsVersionMin Protocol Port Network)) {
        $db->set_prop($input->{'name'}, $_, $input->{$_}) if (exists($input->{$_}));
    }

    if ($input->{'Psk'}) {
        write_file("/var/lib/nethserver/openvpn-tunnels/".$input->{'name'}.".key", $input->{'Psk'});
    }

} elsif ($cmd eq 'enable' || $cmd eq 'disable') {

    my $status =( $cmd eq 'enable') ? 'enabled' : 'disabled';
    $db->set_prop($input->{'name'}, 'status', $status);

} else {
    error();
}

system(("/sbin/e-smith/signal-event", "-j", "openvpn-tunnel-modify", $input->{'name'}));
