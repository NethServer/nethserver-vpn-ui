#!/usr/bin/perl

#
# Copyright (C) 2019 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use warnings;
use esmith::ConfigDB;

require '/usr/libexec/nethserver/api/lib/helper_functions.pl';

my $input = readInput();
# the only valid cmd is 'create'
my $cmd = $input->{'action'};

my $db = esmith::ConfigDB->open('vpn');

my $obj = {type => 'ipsec-tunnel', 'status' => 'enabled'};

foreach (qw(leftsubnets rightsubnets)) {
    if ($input->{$_}) {
        $obj->{$_} = join(",", @{$input->{$_}});
    } else {
        $obj->{$_} = '';
    }
}

foreach (qw(pfs compress)) {
    $obj->{$_} = $input->{$_} ? 'yes' : 'no';
}
$obj->{'dpdaction'} = $input->{'dpdaction'} ? 'restart' : 'hold';

foreach (qw(esp ikelifetime esphash ikehash espcipher psk esppfsgroup salifetime right ikepfsgroup ikecipher ike leftid rightid)) {
    $obj->{$_} = $input->{$_};
}

$obj->{'left'} = '%'.$input->{'left'};

if (!$obj->{'leftid'}) {
    $obj->{'leftid'} = sprintf('@%s.local', $input->{'name'});
}

if (!$obj->{'rightid'}) {
    $obj->{'rightid'} = sprintf('@%s.remote', $input->{'name'});
}

$db->new_record($input->{'name'}, $obj);

system(("/sbin/e-smith/signal-event", "-j", "nethserver-ipsec-tunnels-save"));
